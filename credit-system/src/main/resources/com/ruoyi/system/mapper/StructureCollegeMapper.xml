<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StructureCollegeMapper">
    
    <resultMap type="StructureCollege" id="StructureCollegeResult">
        <result property="collegeId"    column="college_id"    />
        <result property="collegeName"    column="college_name"    />
        <result property="status"    column="status"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectStructureCollegeVo">
        select college_id, college_name, status, del_flag, create_by, create_time, update_by, update_time, remark from structure_college
    </sql>

    <select id="selectStructureCollegeList" parameterType="StructureCollege" resultMap="StructureCollegeResult">
        <include refid="selectStructureCollegeVo"/>
        <where>  
            <if test="collegeName != null  and collegeName != ''"> and college_name like concat('%', #{collegeName}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
             and del_flag = false
        </where>
    </select>
    
    <select id="selectStructureCollegeByCollegeId" parameterType="Long" resultMap="StructureCollegeResult">
        <include refid="selectStructureCollegeVo"/>
        where college_id = #{collegeId}
    </select>
        
    <insert id="insertStructureCollege" parameterType="StructureCollege" useGeneratedKeys="true" keyProperty="collegeId">
        insert into structure_college
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="collegeName != null and collegeName != ''">college_name,</if>
            <if test="status != null">status,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="collegeName != null and collegeName != ''">#{collegeName},</if>
            <if test="status != null">#{status},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateStructureCollege" parameterType="StructureCollege">
        update structure_college
        <trim prefix="SET" suffixOverrides=",">
            <if test="collegeName != null and collegeName != ''">college_name = #{collegeName},</if>
            <if test="status != null">status = #{status},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where college_id = #{collegeId}
    </update>

    <delete id="deleteStructureCollegeByCollegeId" parameterType="Long">
        delete from structure_college where college_id = #{collegeId}
    </delete>

    <delete id="deleteStructureCollegeByCollegeIds" parameterType="String">
        delete from structure_college where college_id in 
        <foreach item="collegeId" collection="array" open="(" separator="," close=")">
            #{collegeId}
        </foreach>
    </delete>
</mapper>